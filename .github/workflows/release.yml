name: WSGet Release

on:
  release:
    types: 
      - created

jobs:
  build:
    name: Generate builds
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.21.x'
      - name: Build Linux
        run: CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -buildmode=exe -o ./wsget ./cmd/wsget
      - name: Compress Linux
        run: tar -czvf ./wsget-linux-amd64.tar.gz ./wsget ./LICENSE ./README.md
      - name: Build MacOS (Intel)
        run: CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -buildmode=exe -o ./wsget ./cmd/wsget 
      - name: Compress MacOS (Intel)
        run: tar -czvf ./wsget-darwin-amd64.tar.gz ./wsget ./LICENSE ./README.md
      - name: Build MacOS (M)
        run: CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -buildmode=exe -o ./wsget ./cmd/wsget
      - name: Compress MacOS (M)
        run: tar -czvf ./wsget-darwin-arm64.tar.gz ./wsget ./LICENSE ./README.md
      - name: Copy build-artifacts
        uses: skx/github-action-publish-binaries@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: "./*.tar.gz"
