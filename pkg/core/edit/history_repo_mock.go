// Code generated by mockery v2.50.0. DO NOT EDIT.

//go:build !compile

package edit

import mock "github.com/stretchr/testify/mock"

// MockHistoryRepo is an autogenerated mock type for the HistoryRepo type
type MockHistoryRepo struct {
	mock.Mock
}

type MockHistoryRepo_Expecter struct {
	mock *mock.Mock
}

func (_m *MockHistoryRepo) EXPECT() *MockHistoryRepo_Expecter {
	return &MockHistoryRepo_Expecter{mock: &_m.Mock}
}

// AddRequest provides a mock function with given fields: req
func (_m *MockHistoryRepo) AddRequest(req string) {
	_m.Called(req)
}

// MockHistoryRepo_AddRequest_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AddRequest'
type MockHistoryRepo_AddRequest_Call struct {
	*mock.Call
}

// AddRequest is a helper method to define mock.On call
//   - req string
func (_e *MockHistoryRepo_Expecter) AddRequest(req interface{}) *MockHistoryRepo_AddRequest_Call {
	return &MockHistoryRepo_AddRequest_Call{Call: _e.mock.On("AddRequest", req)}
}

func (_c *MockHistoryRepo_AddRequest_Call) Run(run func(req string)) *MockHistoryRepo_AddRequest_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockHistoryRepo_AddRequest_Call) Return() *MockHistoryRepo_AddRequest_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHistoryRepo_AddRequest_Call) RunAndReturn(run func(string)) *MockHistoryRepo_AddRequest_Call {
	_c.Run(run)
	return _c
}

// NextRequest provides a mock function with no fields
func (_m *MockHistoryRepo) NextRequest() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for NextRequest")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockHistoryRepo_NextRequest_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'NextRequest'
type MockHistoryRepo_NextRequest_Call struct {
	*mock.Call
}

// NextRequest is a helper method to define mock.On call
func (_e *MockHistoryRepo_Expecter) NextRequest() *MockHistoryRepo_NextRequest_Call {
	return &MockHistoryRepo_NextRequest_Call{Call: _e.mock.On("NextRequest")}
}

func (_c *MockHistoryRepo_NextRequest_Call) Run(run func()) *MockHistoryRepo_NextRequest_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockHistoryRepo_NextRequest_Call) Return(_a0 string) *MockHistoryRepo_NextRequest_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockHistoryRepo_NextRequest_Call) RunAndReturn(run func() string) *MockHistoryRepo_NextRequest_Call {
	_c.Call.Return(run)
	return _c
}

// PrevRequest provides a mock function with no fields
func (_m *MockHistoryRepo) PrevRequest() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for PrevRequest")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockHistoryRepo_PrevRequest_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'PrevRequest'
type MockHistoryRepo_PrevRequest_Call struct {
	*mock.Call
}

// PrevRequest is a helper method to define mock.On call
func (_e *MockHistoryRepo_Expecter) PrevRequest() *MockHistoryRepo_PrevRequest_Call {
	return &MockHistoryRepo_PrevRequest_Call{Call: _e.mock.On("PrevRequest")}
}

func (_c *MockHistoryRepo_PrevRequest_Call) Run(run func()) *MockHistoryRepo_PrevRequest_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockHistoryRepo_PrevRequest_Call) Return(_a0 string) *MockHistoryRepo_PrevRequest_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockHistoryRepo_PrevRequest_Call) RunAndReturn(run func() string) *MockHistoryRepo_PrevRequest_Call {
	_c.Call.Return(run)
	return _c
}

// ResetPosition provides a mock function with no fields
func (_m *MockHistoryRepo) ResetPosition() {
	_m.Called()
}

// MockHistoryRepo_ResetPosition_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ResetPosition'
type MockHistoryRepo_ResetPosition_Call struct {
	*mock.Call
}

// ResetPosition is a helper method to define mock.On call
func (_e *MockHistoryRepo_Expecter) ResetPosition() *MockHistoryRepo_ResetPosition_Call {
	return &MockHistoryRepo_ResetPosition_Call{Call: _e.mock.On("ResetPosition")}
}

func (_c *MockHistoryRepo_ResetPosition_Call) Run(run func()) *MockHistoryRepo_ResetPosition_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockHistoryRepo_ResetPosition_Call) Return() *MockHistoryRepo_ResetPosition_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHistoryRepo_ResetPosition_Call) RunAndReturn(run func()) *MockHistoryRepo_ResetPosition_Call {
	_c.Run(run)
	return _c
}

// Search provides a mock function with given fields: prefix
func (_m *MockHistoryRepo) Search(prefix string) string {
	ret := _m.Called(prefix)

	if len(ret) == 0 {
		panic("no return value specified for Search")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(prefix)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockHistoryRepo_Search_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Search'
type MockHistoryRepo_Search_Call struct {
	*mock.Call
}

// Search is a helper method to define mock.On call
//   - prefix string
func (_e *MockHistoryRepo_Expecter) Search(prefix interface{}) *MockHistoryRepo_Search_Call {
	return &MockHistoryRepo_Search_Call{Call: _e.mock.On("Search", prefix)}
}

func (_c *MockHistoryRepo_Search_Call) Run(run func(prefix string)) *MockHistoryRepo_Search_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockHistoryRepo_Search_Call) Return(_a0 string) *MockHistoryRepo_Search_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockHistoryRepo_Search_Call) RunAndReturn(run func(string) string) *MockHistoryRepo_Search_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockHistoryRepo creates a new instance of MockHistoryRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockHistoryRepo(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockHistoryRepo {
	mock := &MockHistoryRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
