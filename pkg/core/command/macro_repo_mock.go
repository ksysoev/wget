// Code generated by mockery v2.50.0. DO NOT EDIT.

//go:build !compile

package command

import (
	core "github.com/ksysoev/wsget/pkg/core"
	mock "github.com/stretchr/testify/mock"
)

// MockMacroRepo is an autogenerated mock type for the MacroRepo type
type MockMacroRepo struct {
	mock.Mock
}

type MockMacroRepo_Expecter struct {
	mock *mock.Mock
}

func (_m *MockMacroRepo) EXPECT() *MockMacroRepo_Expecter {
	return &MockMacroRepo_Expecter{mock: &_m.Mock}
}

// Get provides a mock function with given fields: name, argString
func (_m *MockMacroRepo) Get(name string, argString string) (core.Executer, error) {
	ret := _m.Called(name, argString)

	if len(ret) == 0 {
		panic("no return value specified for Get")
	}

	var r0 core.Executer
	var r1 error
	if rf, ok := ret.Get(0).(func(string, string) (core.Executer, error)); ok {
		return rf(name, argString)
	}
	if rf, ok := ret.Get(0).(func(string, string) core.Executer); ok {
		r0 = rf(name, argString)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(core.Executer)
		}
	}

	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(name, argString)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockMacroRepo_Get_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Get'
type MockMacroRepo_Get_Call struct {
	*mock.Call
}

// Get is a helper method to define mock.On call
//   - name string
//   - argString string
func (_e *MockMacroRepo_Expecter) Get(name interface{}, argString interface{}) *MockMacroRepo_Get_Call {
	return &MockMacroRepo_Get_Call{Call: _e.mock.On("Get", name, argString)}
}

func (_c *MockMacroRepo_Get_Call) Run(run func(name string, argString string)) *MockMacroRepo_Get_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(string))
	})
	return _c
}

func (_c *MockMacroRepo_Get_Call) Return(_a0 core.Executer, _a1 error) *MockMacroRepo_Get_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockMacroRepo_Get_Call) RunAndReturn(run func(string, string) (core.Executer, error)) *MockMacroRepo_Get_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockMacroRepo creates a new instance of MockMacroRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockMacroRepo(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockMacroRepo {
	mock := &MockMacroRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
